<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="MenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="OpenFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>153, 17</value>
  </metadata>
</root>